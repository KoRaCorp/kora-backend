plugins {

}

// domain 모듈의 경우 main method 없이 라이브러리 역할을 하는 모듈이다.
// 따라서 BootJar이 아닌 jar파일로 생성되고 다른 프로젝트에 첨부될 것이다.

bootJar { // bootJar 끄기
    enabled = false
}

jar { // jar 설정 켜기
    enabled = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /**
     * h2
     */
    runtimeOnly 'com.h2database:h2'

    /**
     * mysql
     */
    runtimeOnly 'com.mysql:mysql-connector-j'

    /**
     * querydsl
     */

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    /**
     * Jwt
     */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    /**
     * RandomString
     */
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * querydsl
 */
def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

